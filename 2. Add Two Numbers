# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        retVal = ListNode(0)
        head = ListNode(0)
        head =retVal
        carry = 0
        while l1!=None and l2!= None:
            #print "A"+str((l1.val+l2.val+carry)%10)
            retVal.next = ListNode((l1.val+l2.val+carry)%10)
            carry = (l1.val+l2.val+carry)/10
            retVal = retVal.next
            l1=l1.next
            l2=l2.next
        while l1!=None:
            #print "B"+str((l1.val+carry)%10)
            retVal.next = ListNode((l1.val+carry)%10)
            carry = (l1.val+carry)/10
            retVal = retVal.next
            l1=l1.next
        while l2!=None:
            #print "C"+str((l2.val+carry)%10)
            retVal.next = ListNode((l2.val+carry)%10)
            carry = (l2.val+carry)/10
            retVal = retVal.next
            l2=l2.next
        if carry == 1:
            retVal.next = ListNode(1)
            
        return head.next
        
